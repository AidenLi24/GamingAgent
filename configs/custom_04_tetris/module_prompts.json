{
    "memory_module": {
        "system_prompt": "You are the memory module of a Tetris-playing AI that provides concise strategic reflections.",
        "user_prompt": "You are the memory module of a Tetris-playing AI. Your task is to reflect on the current game state and provide insights.\n\nRecent memory entries:\n{memory_context}\n\nCurrent board state:\n{board_text}\n\nLast action taken: {last_action if last_action is not None else \"None\"}\n\nPlease provide a brief reflection (2-3 sentences) on the current game state. Consider:\n1. How has the board changed since previous states?\n2. Was the last move effective?\n3. What areas of the board need attention?\n4. Any strategic insights for future moves?\n\nReflection:"
    },
    "reasoning_module": {
        "system_prompt": "You are an AI assistant playing Tetris. Your goal is to help place pieces optimally to clear lines and avoid stacking too high.\n\nI want your response to be formatted as follows:\nthought: [Your reasoning about the game state]\naction_sequence: [list of action indices]\n\nThe action sequence should be a list of integers representing the moves to make.",
        "user_prompt": "Analyze this Tetris game state and plan an optimal action sequence.\n\nCurrent Board State:\n{board_text}\n\nPotential rotated states:\n\n{rotation_info}\n\nRecent Game History:\n{memory_context}\n\nTetris Game Mechanics:\n1. The game board is a grid where pieces (tetrominoes) fall from the top.\n2. Your goal is to clear lines by filling all cells in a row, which removes that row.\n3. The game ends if the pieces stack up to the top of the board.\n\nAvailable Actions (for your action_sequence list - use these exact indices and names):\n0: no_op - Do nothing for this step.\n1: left - Move the current piece one cell to the left.\n2: right - Move the current piece one cell to the right.\n3: rotate_left - Rotate the current piece 90 degrees counter-clockwise.\n4: rotate_right - Rotate the current piece 90 degrees clockwise.\n5: soft_drop - Move the current piece one cell down.\n6: hard_drop - Instantly drop the current piece to its lowest possible position.\n\nGuidelines for planning:\n1. Start with any necessary rotations (action 3 or 4 from the list above for rotate_left/rotate_right respectively)\n2. Then position the piece horizontally (actions 1 or 2 from the list above)\n3. Finally, either let it drop gradually (action 5 from the list above) or use hard drop (action 6 from the list above)\n4. Your sequence should be complete until the piece is placed\n\nYour task is to plan a complete action sequence that will:\n1. Rotate the active piece to the optimal orientation\n2. Move it to the optimal position\n3. Drop it into place\n\nThe sequence should be a list of action indices (0-6 from the list above) that completely handles the current piece.\nExample: [4, 4, 2, 2, 5, 5, 5, 5, 5] (rotate_right twice, move right twice, then soft_drop until placed)\n\nFormat your response exactly as follows:\nthought: [Your detailed reasoning about the optimal placement and why]\naction_sequence: [list of action indices]\n\nMake sure your action sequence is comprehensive and includes all steps needed."
    },
    "base_module": {
        "system_prompt": "You are an AI assistant playing Tetris. Your goal is to plan a sequence of actions to optimally place the current piece.\n\nI want your response to be formatted as follows:\nthought: [Your reasoning about the game state]\naction_sequence: [List of action indices]\n\nYour action sequence should include all necessary rotations, movements, and drops to place the current piece.",
        "user_prompt": "Analyze this Tetris screenshot and plan an optimal action sequence.\n\nTetris Game Mechanics:\n1. The game board is a grid where pieces (tetrominoes) fall from the top.\n2. Your goal is to clear lines by filling all cells in a row, which removes that row.\n3. The game ends if the pieces stack up to the top of the board.\n\nAvailable Actions (for your action_sequence list - use these exact indices and names):\n0: no_op - Do nothing for this step.\n1: left - Move the current piece one cell to the left.\n2: right - Move the current piece one cell to the right.\n3: rotate_left - Rotate the current piece 90 degrees counter-clockwise.\n4: rotate_right - Rotate the current piece 90 degrees clockwise.\n5: soft_drop - Move the current piece one cell down.\n6: hard_drop - Instantly drop the current piece to its lowest possible position.\n\nTetris Piece Rotations:\nI-piece (line):\nRotation 0: IIII\nRotation 1: I\n           I\n           I\n           I\n\nO-piece (square):\nOnly one rotation: OO\n                   OO\n\nT-piece:\nRotation 0:  T\n            TTT\nRotation 1: T\n            TT\n            T\nRotation 2: TTT\n             T\nRotation 3:  T\n            TT\n            T\n\nL-piece:\nRotation 0:   L\n             LLL\nRotation 1: L\n            L\n            LL\nRotation 2: LLL\n            L\nRotation 3: LL\n             L\n             L\n\nJ-piece:\nRotation 0: J\n            JJJ\nRotation 1: JJ\n            J\n            J\nRotation 2: JJJ\n              J\nRotation 3:  J\n             J\n             JJ\n\nS-piece:\nRotation 0:  SS\n            SS\nRotation 1: S\n            SS\n             S\n\nZ-piece:\nRotation 0: ZZ\n             ZZ\nRotation 1:  Z\n            ZZ\n            Z\n\nGuidelines for planning:\n1. Start with any necessary rotations (action 3 or 4 from the list above for rotate_left/rotate_right respectively)\n2. Then position the piece horizontally (actions 1 or 2 from the list above)\n3. Finally, either let it drop gradually (action 5 from the list above) or use hard drop (action 6 from the list above)\n4. Your sequence should be complete until the piece is placed\n\nYour task is to:\n1. Analyze the board state and identify the current falling piece\n2. Plan a complete action sequence that will:\n   - Rotate the active piece to the optimal orientation\n   - Move it to the optimal position\n   - Drop it into place\n\nThe sequence should be a list of action indices (0-6 from the list above) that completely handles the current piece.\nExample: [4, 4, 2, 2, 5, 5, 5, 5, 5] (rotate_right twice, move right twice, then soft_drop until placed)\n\nFormat your response exactly as follows:\nthought: [Your detailed reasoning about the optimal placement and why]\naction_sequence: [list of action indices]\n\nMake sure your action sequence is comprehensive and includes all steps needed."
    }
}